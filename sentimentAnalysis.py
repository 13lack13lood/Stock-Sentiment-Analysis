# -*- coding: utf-8 -*-
"""Financial News Sentiment Prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pOM-tS7J9zci9NHBRgqVDDfcd9oYxDBj

# **Financial News Sentiment Prediction**

Get data
"""

!git clone https://gist.github.com/ivangrov/c1a8c0359fbde2f6dcb92065b8ffc5e3

import pandas

headlines_df = pandas.read_csv('c1a8c0359fbde2f6dcb92065b8ffc5e3/300_stock_headlines.csv')
headlines_df.head(10)

import numpy as np


headlines_array = np.array(headlines_df)
np.random.shuffle(headlines_array)
headlines_list = list(headlines_array[:,2])


print(headlines_list)

# prompt:



from transformers import AutoTokenizer, AutoModelForSequenceClassification

tokenizer = AutoTokenizer.from_pretrained("ProsusAI/finbert")
model = AutoModelForSequenceClassification.from_pretrained("ProsusAI/finbert")

inputs = tokenizer(headlines_list, padding = True, truncation = True, return_tensors='pt')

outputs = model(**inputs)
print(outputs.logits.shape)

import torch


predictions = torch.nn.functional.softmax(outputs.logits, dim=-1)
print(predictions)

import pandas as pd

positive = predictions[:,0].tolist()
negative = predictions[:,1].tolist()
neutral = predictions[:,2].tolist()

table = {"Headline": headlines_list,
         "Postive": positive,
         "Negative": negative,
         "Neutral": neutral}

df = pd.DataFrame(table)

df.head(10)